/* stylelint-disable no-descending-specificity */
.button {
  $this: &;

  @include reset-button;

  border-radius: 8px;
  font-family: inherit;
  font-weight: inherit;
  color: inherit;
  background-color: transparent;
  transition: all $default-transition;

  &--light {
    display: flex;
    align-items: center;
    justify-content: space-between;
    outline: 1px solid $color-grey-light-200;
    padding: 16px 24px;
    width: 100%;
    min-height: 48px;
    max-width: 288px;
    color: $color-dark-grey;
    transition: all $default-transition;

    span {
      line-height: 0;
    }

    svg {
      @include icon(14px,14px,$color-dark-grey);

      flex: none;
    }

    &:hover {
      background-color: $color-grey-light-100;

      svg {
        color: $color-black;
        transform: rotate(180deg);
        transition: color $default-transition;
        transition: transform 0.5s ease-in-out;
      }
    }
  }

  &--close {
    width: 9px;
    height: 9px;
    line-height: 0;

    svg {
      width: 100%;
      height: 100%;
    }
  }

  &--eye {
    width: 20px;
    height: 20px;
    color: $color-medium-grey;

    svg {
      width: 100%;
      height: 100%;
    }

    svg:hover {
      color: $color-dark-grey;
    }
  }

  &--bright {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px;
    color: $color-white;
    background-color: $primary-color-default;

    &:hover {
      background-color: $primary-color-hover;
    }

    &:active {
      transform: translateY(1px);
    }

    &:disabled,
    &[disabled] {
      background-color: $primary-color-disable;
      pointer-events: none;
    }
  }
}
